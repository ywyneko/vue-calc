{"remainingRequest":"/Users/pro/Desktop/VueJS /calculator/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/pro/Desktop/VueJS /calculator/src/components/Calculator.vue?vue&type=style&index=0&id=e835979c&scoped=true&lang=css&","dependencies":[{"path":"/Users/pro/Desktop/VueJS /calculator/src/components/Calculator.vue","mtime":1604764000833},{"path":"/Users/pro/Desktop/VueJS /calculator/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pro/Desktop/VueJS /calculator/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/pro/Desktop/VueJS /calculator/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/pro/Desktop/VueJS /calculator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pro/Desktop/VueJS /calculator/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmNhbGN1bGF0b3J7CiAgd2lkdGg6IDQwMHB4OwogIG1hcmdpbiA6IDAgYXV0bzsKICBmb250LXNpemU6IDQwcHg7CiAgZGlzcGxheTogZ3JpZDsKICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg0LDFmcik7CiAgZ3JpZC1hdXRvLXJvd3MgOiBtaW5tYXgoNTBweCxhdXRvKQp9Ci5kaXNwbGF5ewogIGdyaWQtY29sdW1uOiAxIC8gNTsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzOwogIGNvbG9yIDogI2ZmZjsKfQouemVyb3sKICBncmlkLWNvbHVtbjogMS8zOwp9Ci5idG57CiAgYmFja2dyb3VuZC1jb2xvcjogI2YyZjJmMjsKICBib3JkZXI6IDFweCBzb2xpZCAjOTk5Owp9Ci5vcGVyYXRvcnsKICBiYWNrZ3JvdW5kLWNvbG9yOiBvcmFuZ2U7CiAgY29sb3I6ICNmZmY7Cn0K"},{"version":3,"sources":["Calculator.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Calculator.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"calculator\">\n    <div class=\"display\">\n     {{current || '0'}}\n    </div>\n    <div @click=\"clear\" class=\"btn\">C</div>\n    <div @click=\"sign\" class=\"btn\">+/-</div>\n    <div @click=\"percent\" class=\"btn\">%</div>\n    <div @click=\"divide\" class=\"btn operator\">รท</div>\n    <div @click=\"append(7)\" class=\"btn\">7</div>\n    <div @click=\"append(8)\" class=\"btn\">8</div>\n    <div @click=\"append(9)\" class=\"btn\">9</div>\n    <div @click=\"times\" class=\"btn operator\">x</div>\n    <div @click=\"append(4)\" class=\"btn\">4</div>\n    <div @click=\"append(5)\" class=\"btn\">5</div>\n    <div @click=\"append(6)\" class=\"btn\">6</div>\n    <div @click=\"minus\" class=\"btn operator\">-</div>\n    <div @click=\"append(1)\" class=\"btn\">1</div>\n    <div @click=\"append(2)\" class=\"btn\">2</div>\n    <div @click=\"append(3)\" class=\"btn\">3</div>\n    <div @click=\"add\" class=\"btn operator\">+</div>\n    <div @click=\"append(0)\" class=\"btn zero\">0</div>\n    <div @click=\"Dot\" class=\"btn\">.</div>\n    <div @click=\"equal\" class=\"btn operator\">=</div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data(){\n    return{\n      previous : null,\n      current : '',\n      operator : null,\n      operatorClicked: false,\n    }\n  },\n  methods : {\n    clear(){\n      this.current = '';\n    },\n    sign(){\n      this.current = this.current.charAt(0) === '-' ? this.current.slice(1) : `-${this.current}`;\n    },\n    percent(){\n      this.current = `${parseFloat(this.current) / 100}`;\n    },\n    append(number){\n      if(this.operatorClicked){\n        this.current = '';\n        this.operatorClicked = false;\n      }\n      this.current = `${this.current}${number}`;\n    },\n    Dot(){\n      if(this.current.indexOf('.') === -1){\n          this.append('.');\n      }\n    },\n    setPrevious(){\n      this.previous = this.current;\n      this.operatorClicked = true;\n    },\n    divide(){\n      this.operator = (a,b) => a/b;\n      this.setPrevious();\n    },\n    times(){\n      this.operator = (a,b) => a * b;\n      this.setPrevious();\n    },\n    minus(){\n      this.operator = (a,b) => a - b;\n      this.setPrevious();\n    },\n    add(){\n      this.operator = (a,b) => a + b;\n      this.setPrevious();\n    },\n    equal(){\n      this.current = this.operator(\n        parseFloat(this.current),\n        parseFloat(this.previous));\n      this.previous = null;\n    }\n  }\n}\n</script>\n\n<style scoped>\n  .calculator{\n    width: 400px;\n    margin : 0 auto;\n    font-size: 40px;\n    display: grid;\n    grid-template-columns: repeat(4,1fr);\n    grid-auto-rows : minmax(50px,auto)\n  }\n  .display{\n    grid-column: 1 / 5;\n    background-color: #333;\n    color : #fff;\n  }\n  .zero{\n    grid-column: 1/3;\n  }\n  .btn{\n    background-color: #f2f2f2;\n    border: 1px solid #999;\n  }\n  .operator{\n    background-color: orange;\n    color: #fff;\n  }\n</style>"]}]}